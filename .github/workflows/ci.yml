name: CI

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main]

jobs:
    # Backend tests
    backend:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: [3.11]

        steps:
            - uses: actions/checkout@v4

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v4
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Install uv
              uses: astral-sh/setup-uv@v1
              with:
                  version: "latest"

            - name: Cache dependencies
              uses: actions/cache@v3
              with:
                  path: |
                      ~/.cache/uv
                  key: ${{ runner.os }}-uv-${{ hashFiles('apps/api/pyproject.toml') }}
                  restore-keys: |
                      ${{ runner.os }}-uv-

            - name: Install dependencies
              working-directory: apps/api
              run: uv sync

            - name: Run linting
              working-directory: apps/api
              run: uv run lint

            - name: Run type checking
              working-directory: apps/api
              run: uv run typecheck

            - name: Run tests
              working-directory: apps/api
              run: uv run test

    # Frontend tests
    frontend:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "18"

            - name: Install pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: 8

            - name: Get pnpm store directory
              shell: bash
              run: |
                  echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

            - name: Setup pnpm cache
              uses: actions/cache@v3
              with:
                  path: ${{ env.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Build shared package
              run: pnpm --filter @ai-app/shared build

            - name: Run linting
              run: pnpm --filter ai-app-web lint

            - name: Run type checking
              run: pnpm --filter ai-app-web typecheck

            - name: Run tests
              run: pnpm --filter ai-app-web test

    # E2E tests
    e2e:
        runs-on: ubuntu-latest
        needs: [backend, frontend]

        steps:
            - uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "18"

            - name: Install pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: 8

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Install Playwright Browsers
              run: pnpm --filter ai-app-web exec playwright install --with-deps

            - name: Run E2E tests
              run: pnpm --filter ai-app-web test:e2e
